import Head from "next/head";
import styles from "../styles/Home.module.css";
import type { ViewerProps } from "../components/viewer";
import dynamic from "next/dynamic";
import { GetServerSidePropsContext, GetServerSidePropsResult } from "next";
import SideWindow from "../components/SideWindow";
import { useCallback, useState } from "react";
import { PropertiesViewer } from "../components/PropertiesViewer";
import { Field } from "../components/Field";
import { Button } from "../components/Button";
import { TopBar } from "../components/TopBar";

export function getServerSideProps({}: GetServerSidePropsContext) {
  const { N4J_URL, N4J_USER, N4J_PASS } = process.env;

  if (!N4J_URL || !N4J_USER || !N4J_PASS) {
    throw new Error("A environment variable is missing :(");
  }

  return {
    props: {
      conn: {
        query: "match (n) return n",
        url: N4J_URL,
        user: N4J_USER,
        pass: N4J_PASS,
      },
    },
  } as GetServerSidePropsResult<HomeProps>;
}

const Viewer = dynamic(() => import("../components/viewer"), { ssr: false });

interface HomeProps {
  conn: Omit<ViewerProps, "onClick" | "query">;
}

const initialVal = "match (n) return n"; //"match (n:Movie)-[d:REVIEWED]-(p:Person) return n,d,p";

export default function Home({ conn }: HomeProps) {
  const [open, setOpen] = useState(false);
  const [data, setData] = useState({});
  const [query, setQuery] = useState(initialVal);
  const [text, setText] = useState(initialVal);

  const onViewer: ViewerProps["onClick"] = useCallback(
    (x) => {
      setOpen(true);
      setData(x);
    },
    [setData, setOpen]
  );

  function onQueryUpdate() {
    setQuery(text);
  }

  return (
    <div className={styles.container + "flex flex-col h-screen"}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <SideWindow show={open} onClose={() => setOpen(false)}>
        <PropertiesViewer data={data} />
      </SideWindow>

      <TopBar>
        <div className="flex mx-12 justify-between">
          <Field value={text} onChange={(t) => setText(t)} />
          <Button onClick={onQueryUpdate}>Run</Button>
        </div>
      </TopBar>

      <Viewer onClick={onViewer} {...conn} query={query} />
    </div>
  );
}
